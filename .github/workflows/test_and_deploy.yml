name: tests

on:
  push:
    branches:
      - '*'
    tags:
      - '*'
  pull_request:
  merge_group:

jobs:
  linting:
    runs-on: ubuntu-latest
    steps:
      - uses: neuroinformatics-unit/actions/lint@v2

  manifest:
    name: Check Manifest
    runs-on: ubuntu-latest
    steps:
      - uses: neuroinformatics-unit/actions/check_manifest@v2

  test:
    needs: [linting, manifest]
    name: ${{ matrix.os }} py${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: ["3.11", "3.12", "3.13"]
        os: [ubuntu-latest]
        include:
        - os: macos-latest
          python-version: "3.13"
        - os: windows-latest
          python-version: "3.13"

    steps:
      - uses: actions/checkout@v4

      # Set up Python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov

      - name: Run tests and generate coverage report
        run: pytest --cov=movement --cov-report=xml

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage.xml

      - name: SonarQube Analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          sonar-scanner \
            -Dsonar.projectKey=neuroinformatics-unit_movement \
            -Dsonar.organization=neuroinformatics-unit \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.python.coverage.reportPaths=coverage.xml

  build_sdist_wheels:
    name: Build source distribution
    needs: [test]
    if: github.event_name == 'push' && github.ref_type == 'tag'
    runs-on: ubuntu-latest
    steps:
    - uses: neuroinformatics-unit/actions/build_sdist_wheels@v2

  upload_all:
    name: Publish build distributions
    needs: [build_sdist_wheels]
    if: github.event_name == 'push' && github.ref_type == 'tag'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/download-artifact@v4
      with:
        name: artifact
        path: dist
    - uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.TWINE_API_KEY }}
