
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/advanced/broadcasting_your_own_methods.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_examples_advanced_broadcasting_your_own_methods.py>`
        to download the full example code. or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_advanced_broadcasting_your_own_methods.py:

Broadcast functions across multi-dimensional data
=====================================================

Use the ``make_broadcastable`` decorator to efficiently
apply functions across any data dimension.

.. GENERATED FROM PYTHON SOURCE LINES 9-19

Summary
-------
The ``make_broadcastable`` decorator is particularly useful when you need to
apply the same operation to multiple individuals or time points
while avoiding the need to write complex loops.

The example walks through a practical case study of detecting when animals
enter a specific region of interest, showing how to convert a simple
point-in-rectangle check into a function that works on a data array
with many time-varying point trajectories.

.. GENERATED FROM PYTHON SOURCE LINES 21-28

Imports
-------
We will need ``numpy`` and ``xarray`` to make our custom data for this
example, and ``matplotlib`` to show what it contains.
We will be using the :mod:`movement.utils.broadcasting` module to
turn our one-dimensional functions into functions that work across
entire ``DataArray`` objects.

.. GENERATED FROM PYTHON SOURCE LINES 30-42

.. code-block:: Python


    # For interactive plots: install ipympl with `pip install ipympl` and uncomment
    # the following lines in your notebook
    # %matplotlib widget
    import matplotlib.pyplot as plt
    import numpy as np
    import xarray as xr

    from movement import sample_data
    from movement.plots import plot_centroid_trajectory
    from movement.utils.broadcasting import make_broadcastable








.. GENERATED FROM PYTHON SOURCE LINES 43-48

Load Sample Dataset
-------------------
First, we load the ``SLEAP_three-mice_Aeon_proofread`` example dataset.
For the rest of this example we'll only need the ``position`` data array, so
we store it in a separate variable.

.. GENERATED FROM PYTHON SOURCE LINES 48-51

.. code-block:: Python


    ds = sample_data.fetch_dataset("SLEAP_three-mice_Aeon_proofread.analysis.h5")
    positions: xr.DataArray = ds.position







.. GENERATED FROM PYTHON SOURCE LINES 52-56

The individuals in this dataset follow very similar, arc-like trajectories.
To help emphasise what we are doing in this example, we will offset the paths
of two of the individuals by a small amount so that the trajectories are more
distinct.

.. GENERATED FROM PYTHON SOURCE LINES 56-60

.. code-block:: Python


    positions.loc[:, "y", :, "AEON3B_TP1"] -= 100.0
    positions.loc[:, "y", :, "AEON3B_TP2"] += 100.0








.. GENERATED FROM PYTHON SOURCE LINES 61-84

.. code-block:: Python


    fig, ax = plt.subplots(1, 1)
    for mouse_name, col in zip(
        positions.individuals.values, ["r", "g", "b"], strict=False
    ):
        plot_centroid_trajectory(
            positions,
            individual=mouse_name,
            keypoints="centroid",
            ax=ax,
            linestyle="-",
            marker=".",
            s=2,
            linewidth=0.5,
            c=col,
            label=mouse_name,
        )
    ax.invert_yaxis()
    ax.set_title("Trajectories")
    ax.set_xlabel("x (pixels)")
    ax.set_ylabel("y (pixels)")
    ax.legend()




.. image-sg:: /examples/advanced/images/sphx_glr_broadcasting_your_own_methods_001.png
   :alt: Trajectories
   :srcset: /examples/advanced/images/sphx_glr_broadcasting_your_own_methods_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7f706abf7650>



.. GENERATED FROM PYTHON SOURCE LINES 85-96

Motivation
----------
Suppose that, during our experiment, we have a region of the enclosure that
has a slightly wet floor, making it slippery. The individuals must cross this
region in order to reach some kind of reward on the other side of the
enclosure.
We know that the "slippery region" of our enclosure is approximately
rectangular in shape, and has its opposite corners at (400, 0) and
(600, 2000), where the coordinates are given in pixels.
We could then write a function that determines if a given (x, y) position was
inside this "slippery region".

.. GENERATED FROM PYTHON SOURCE LINES 96-117

.. code-block:: Python



    def in_slippery_region(xy_position) -> bool:
        """Return True if xy_position is in the slippery region.

        Return False otherwise.
        xy_position has 2 elements, the (x, y) coordinates respectively.
        """
        # The slippery region is a rectangle with the following bounds
        x_min, y_min = 400.0, 0.0
        x_max, y_max = 600.0, 2000.0

        is_within_bounds_x = x_min <= xy_position[0] <= x_max
        is_within_bounds_y = y_min < xy_position[1] <= y_max
        return is_within_bounds_x and is_within_bounds_y


    # We can just check our function with a few sample points
    for point in [(0, 100), (450, 700), (550, 1500), (601, 500)]:
        print(f"{point} is in slippery region: {in_slippery_region(point)}")





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    (0, 100) is in slippery region: False
    (450, 700) is in slippery region: True
    (550, 1500) is in slippery region: True
    (601, 500) is in slippery region: False




.. GENERATED FROM PYTHON SOURCE LINES 118-123

Determine if each position was slippery
---------------------------------------
Given our data, we could extract whether each position (for each time-point,
and each individual) was inside the slippery region by looping over the
values.

.. GENERATED FROM PYTHON SOURCE LINES 123-165

.. code-block:: Python


    data_shape = positions.shape
    in_slippery = np.zeros(
        shape=(
            len(positions["time"]),
            len(positions["keypoints"]),
            len(positions["individuals"]),
        ),
        dtype=bool,
    )  # We would save one result per time-point, per keypoint, per individual

    # Feel free to comment out the print statements
    # (line-by-line progress through the loop),
    # if you are running this code on your own machine.
    for time_index, time in enumerate(positions["time"].values):
        # print(f"At time {time}:")
        for keypoint_index, keypoint in enumerate(positions["keypoints"].values):
            # print(f"\tAt keypoint {keypoint}")
            for individual_index, individual in enumerate(
                positions["individuals"].values
            ):
                xy_point = positions.sel(
                    time=time,
                    keypoints=keypoint,
                    individuals=individual,
                )
                was_in_slippery = in_slippery_region(xy_point)
                was_in_slippery_text = (
                    "was in slippery region"
                    if was_in_slippery
                    else "was not in slippery region"
                )
                # print(
                #      "\t\tIndividual "
                #      f"{positions['individuals'].values[individual_index]} "
                #      f"{was_in_slippery_text}"
                # )
                # Save our result to our large array
                in_slippery[time_index, keypoint_index, individual_index] = (
                    was_in_slippery
                )








.. GENERATED FROM PYTHON SOURCE LINES 166-168

We could then build a new ``DataArray`` to store our results, so that we can
access the results in the same way that we did our original data.

.. GENERATED FROM PYTHON SOURCE LINES 168-184

.. code-block:: Python

    was_in_slippery_region = xr.DataArray(
        in_slippery,
        dims=["time", "keypoints", "individuals"],
        coords={
            "time": positions["time"],
            "keypoints": positions["keypoints"],
            "individuals": positions["individuals"],
        },
    )

    print(
        "Boolean DataArray indicating if at a given time, "
        "a given individual was inside the slippery region:"
    )
    was_in_slippery_region





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Boolean DataArray indicating if at a given time, a given individual was inside the slippery region:


.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div><svg style="position: absolute; width: 0; height: 0; overflow: hidden">
    <defs>
    <symbol id="icon-database" viewBox="0 0 32 32">
    <path d="M16 0c-8.837 0-16 2.239-16 5v4c0 2.761 7.163 5 16 5s16-2.239 16-5v-4c0-2.761-7.163-5-16-5z"></path>
    <path d="M16 17c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z"></path>
    <path d="M16 26c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z"></path>
    </symbol>
    <symbol id="icon-file-text2" viewBox="0 0 32 32">
    <path d="M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z"></path>
    <path d="M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
    <path d="M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
    <path d="M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
    </symbol>
    </defs>
    </svg>
    <style>/* CSS stylesheet for displaying xarray objects in jupyterlab.
     *
     */

    :root {
      --xr-font-color0: var(--jp-content-font-color0, rgba(0, 0, 0, 1));
      --xr-font-color2: var(--jp-content-font-color2, rgba(0, 0, 0, 0.54));
      --xr-font-color3: var(--jp-content-font-color3, rgba(0, 0, 0, 0.38));
      --xr-border-color: var(--jp-border-color2, #e0e0e0);
      --xr-disabled-color: var(--jp-layout-color3, #bdbdbd);
      --xr-background-color: var(--jp-layout-color0, white);
      --xr-background-color-row-even: var(--jp-layout-color1, white);
      --xr-background-color-row-odd: var(--jp-layout-color2, #eeeeee);
    }

    html[theme="dark"],
    html[data-theme="dark"],
    body[data-theme="dark"],
    body.vscode-dark {
      --xr-font-color0: rgba(255, 255, 255, 1);
      --xr-font-color2: rgba(255, 255, 255, 0.54);
      --xr-font-color3: rgba(255, 255, 255, 0.38);
      --xr-border-color: #1f1f1f;
      --xr-disabled-color: #515151;
      --xr-background-color: #111111;
      --xr-background-color-row-even: #111111;
      --xr-background-color-row-odd: #313131;
    }

    .xr-wrap {
      display: block !important;
      min-width: 300px;
      max-width: 700px;
    }

    .xr-text-repr-fallback {
      /* fallback to plain text repr when CSS is not injected (untrusted notebook) */
      display: none;
    }

    .xr-header {
      padding-top: 6px;
      padding-bottom: 6px;
      margin-bottom: 4px;
      border-bottom: solid 1px var(--xr-border-color);
    }

    .xr-header > div,
    .xr-header > ul {
      display: inline;
      margin-top: 0;
      margin-bottom: 0;
    }

    .xr-obj-type,
    .xr-array-name {
      margin-left: 2px;
      margin-right: 10px;
    }

    .xr-obj-type {
      color: var(--xr-font-color2);
    }

    .xr-sections {
      padding-left: 0 !important;
      display: grid;
      grid-template-columns: 150px auto auto 1fr 0 20px 0 20px;
    }

    .xr-section-item {
      display: contents;
    }

    .xr-section-item input {
      display: inline-block;
      opacity: 0;
      height: 0;
    }

    .xr-section-item input + label {
      color: var(--xr-disabled-color);
    }

    .xr-section-item input:enabled + label {
      cursor: pointer;
      color: var(--xr-font-color2);
    }

    .xr-section-item input:focus + label {
      border: 2px solid var(--xr-font-color0);
    }

    .xr-section-item input:enabled + label:hover {
      color: var(--xr-font-color0);
    }

    .xr-section-summary {
      grid-column: 1;
      color: var(--xr-font-color2);
      font-weight: 500;
    }

    .xr-section-summary > span {
      display: inline-block;
      padding-left: 0.5em;
    }

    .xr-section-summary-in:disabled + label {
      color: var(--xr-font-color2);
    }

    .xr-section-summary-in + label:before {
      display: inline-block;
      content: "►";
      font-size: 11px;
      width: 15px;
      text-align: center;
    }

    .xr-section-summary-in:disabled + label:before {
      color: var(--xr-disabled-color);
    }

    .xr-section-summary-in:checked + label:before {
      content: "▼";
    }

    .xr-section-summary-in:checked + label > span {
      display: none;
    }

    .xr-section-summary,
    .xr-section-inline-details {
      padding-top: 4px;
      padding-bottom: 4px;
    }

    .xr-section-inline-details {
      grid-column: 2 / -1;
    }

    .xr-section-details {
      display: none;
      grid-column: 1 / -1;
      margin-bottom: 5px;
    }

    .xr-section-summary-in:checked ~ .xr-section-details {
      display: contents;
    }

    .xr-array-wrap {
      grid-column: 1 / -1;
      display: grid;
      grid-template-columns: 20px auto;
    }

    .xr-array-wrap > label {
      grid-column: 1;
      vertical-align: top;
    }

    .xr-preview {
      color: var(--xr-font-color3);
    }

    .xr-array-preview,
    .xr-array-data {
      padding: 0 5px !important;
      grid-column: 2;
    }

    .xr-array-data,
    .xr-array-in:checked ~ .xr-array-preview {
      display: none;
    }

    .xr-array-in:checked ~ .xr-array-data,
    .xr-array-preview {
      display: inline-block;
    }

    .xr-dim-list {
      display: inline-block !important;
      list-style: none;
      padding: 0 !important;
      margin: 0;
    }

    .xr-dim-list li {
      display: inline-block;
      padding: 0;
      margin: 0;
    }

    .xr-dim-list:before {
      content: "(";
    }

    .xr-dim-list:after {
      content: ")";
    }

    .xr-dim-list li:not(:last-child):after {
      content: ",";
      padding-right: 5px;
    }

    .xr-has-index {
      font-weight: bold;
    }

    .xr-var-list,
    .xr-var-item {
      display: contents;
    }

    .xr-var-item > div,
    .xr-var-item label,
    .xr-var-item > .xr-var-name span {
      background-color: var(--xr-background-color-row-even);
      margin-bottom: 0;
    }

    .xr-var-item > .xr-var-name:hover span {
      padding-right: 5px;
    }

    .xr-var-list > li:nth-child(odd) > div,
    .xr-var-list > li:nth-child(odd) > label,
    .xr-var-list > li:nth-child(odd) > .xr-var-name span {
      background-color: var(--xr-background-color-row-odd);
    }

    .xr-var-name {
      grid-column: 1;
    }

    .xr-var-dims {
      grid-column: 2;
    }

    .xr-var-dtype {
      grid-column: 3;
      text-align: right;
      color: var(--xr-font-color2);
    }

    .xr-var-preview {
      grid-column: 4;
    }

    .xr-index-preview {
      grid-column: 2 / 5;
      color: var(--xr-font-color2);
    }

    .xr-var-name,
    .xr-var-dims,
    .xr-var-dtype,
    .xr-preview,
    .xr-attrs dt {
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
      padding-right: 10px;
    }

    .xr-var-name:hover,
    .xr-var-dims:hover,
    .xr-var-dtype:hover,
    .xr-attrs dt:hover {
      overflow: visible;
      width: auto;
      z-index: 1;
    }

    .xr-var-attrs,
    .xr-var-data,
    .xr-index-data {
      display: none;
      background-color: var(--xr-background-color) !important;
      padding-bottom: 5px !important;
    }

    .xr-var-attrs-in:checked ~ .xr-var-attrs,
    .xr-var-data-in:checked ~ .xr-var-data,
    .xr-index-data-in:checked ~ .xr-index-data {
      display: block;
    }

    .xr-var-data > table {
      float: right;
    }

    .xr-var-name span,
    .xr-var-data,
    .xr-index-name div,
    .xr-index-data,
    .xr-attrs {
      padding-left: 25px !important;
    }

    .xr-attrs,
    .xr-var-attrs,
    .xr-var-data,
    .xr-index-data {
      grid-column: 1 / -1;
    }

    dl.xr-attrs {
      padding: 0;
      margin: 0;
      display: grid;
      grid-template-columns: 125px auto;
    }

    .xr-attrs dt,
    .xr-attrs dd {
      padding: 0;
      margin: 0;
      float: left;
      padding-right: 10px;
      width: auto;
    }

    .xr-attrs dt {
      font-weight: normal;
      grid-column: 1;
    }

    .xr-attrs dt:hover span {
      display: inline-block;
      background: var(--xr-background-color);
      padding-right: 10px;
    }

    .xr-attrs dd {
      grid-column: 2;
      white-space: pre-wrap;
      word-break: break-all;
    }

    .xr-icon-database,
    .xr-icon-file-text2,
    .xr-no-icon {
      display: inline-block;
      vertical-align: middle;
      width: 1em;
      height: 1.5em !important;
      stroke-width: 0;
      stroke: currentColor;
      fill: currentColor;
    }
    </style><pre class='xr-text-repr-fallback'>&lt;xarray.DataArray (time: 601, keypoints: 1, individuals: 3)&gt; Size: 2kB
    False False False False False False ... False False False False False False
    Coordinates:
      * time         (time) float64 5kB 0.0 0.02 0.04 0.06 ... 11.96 11.98 12.0
      * keypoints    (keypoints) &lt;U8 32B &#x27;centroid&#x27;
      * individuals  (individuals) &lt;U10 120B &#x27;AEON3B_NTP&#x27; &#x27;AEON3B_TP1&#x27; &#x27;AEON3B_TP2&#x27;</pre><div class='xr-wrap' style='display:none'><div class='xr-header'><div class='xr-obj-type'>xarray.DataArray</div><div class='xr-array-name'></div><ul class='xr-dim-list'><li><span class='xr-has-index'>time</span>: 601</li><li><span class='xr-has-index'>keypoints</span>: 1</li><li><span class='xr-has-index'>individuals</span>: 3</li></ul></div><ul class='xr-sections'><li class='xr-section-item'><div class='xr-array-wrap'><input id='section-14cb6a52-76d7-45a0-8244-976299f7694b' class='xr-array-in' type='checkbox' ><label for='section-14cb6a52-76d7-45a0-8244-976299f7694b' title='Show/hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-array-preview xr-preview'><span>False False False False False False ... False False False False False</span></div><div class='xr-array-data'><pre>array([[[False, False, False]],

           [[False, False, False]],

           [[False, False, False]],

           ...,

           [[False, False, False]],

           [[False, False, False]],

           [[False, False, False]]], shape=(601, 1, 3))</pre></div></div></li><li class='xr-section-item'><input id='section-d142319e-5369-4cd1-8a25-f34e49c33566' class='xr-section-summary-in' type='checkbox'  checked><label for='section-d142319e-5369-4cd1-8a25-f34e49c33566' class='xr-section-summary' >Coordinates: <span>(3)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>time</span></div><div class='xr-var-dims'>(time)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>0.0 0.02 0.04 ... 11.96 11.98 12.0</div><input id='attrs-35cabb76-192e-4652-b285-8c497f6987f9' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-35cabb76-192e-4652-b285-8c497f6987f9' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-7497140f-ba58-4a85-bf80-006a4774720b' class='xr-var-data-in' type='checkbox'><label for='data-7497140f-ba58-4a85-bf80-006a4774720b' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([ 0.  ,  0.02,  0.04, ..., 11.96, 11.98, 12.  ], shape=(601,))</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>keypoints</span></div><div class='xr-var-dims'>(keypoints)</div><div class='xr-var-dtype'>&lt;U8</div><div class='xr-var-preview xr-preview'>&#x27;centroid&#x27;</div><input id='attrs-ea0e39df-d0ad-4753-a15a-866408aaf186' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-ea0e39df-d0ad-4753-a15a-866408aaf186' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-e3118f2d-b4b3-47a0-bdc6-7c0256cc5f9c' class='xr-var-data-in' type='checkbox'><label for='data-e3118f2d-b4b3-47a0-bdc6-7c0256cc5f9c' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([&#x27;centroid&#x27;], dtype=&#x27;&lt;U8&#x27;)</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>individuals</span></div><div class='xr-var-dims'>(individuals)</div><div class='xr-var-dtype'>&lt;U10</div><div class='xr-var-preview xr-preview'>&#x27;AEON3B_NTP&#x27; ... &#x27;AEON3B_TP2&#x27;</div><input id='attrs-c9187ea7-0fe1-4ba3-8917-f7461bd11e95' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-c9187ea7-0fe1-4ba3-8917-f7461bd11e95' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-90b63036-4614-4076-8156-1526481f4347' class='xr-var-data-in' type='checkbox'><label for='data-90b63036-4614-4076-8156-1526481f4347' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([&#x27;AEON3B_NTP&#x27;, &#x27;AEON3B_TP1&#x27;, &#x27;AEON3B_TP2&#x27;], dtype=&#x27;&lt;U10&#x27;)</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-3b8b4c59-8c27-4c1d-b50a-ad370c31be04' class='xr-section-summary-in' type='checkbox'  ><label for='section-3b8b4c59-8c27-4c1d-b50a-ad370c31be04' class='xr-section-summary' >Indexes: <span>(3)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-index-name'><div>time</div></div><div class='xr-index-preview'>PandasIndex</div><input type='checkbox' disabled/><label></label><input id='index-f92f4c41-348f-424e-9b1d-8c825c1e69a2' class='xr-index-data-in' type='checkbox'/><label for='index-f92f4c41-348f-424e-9b1d-8c825c1e69a2' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([  0.0,  0.02,  0.04,  0.06,  0.08,   0.1,  0.12,  0.14,  0.16,  0.18,
           ...
           11.82, 11.84, 11.86, 11.88,  11.9, 11.92, 11.94, 11.96, 11.98,  12.0],
          dtype=&#x27;float64&#x27;, name=&#x27;time&#x27;, length=601))</pre></div></li><li class='xr-var-item'><div class='xr-index-name'><div>keypoints</div></div><div class='xr-index-preview'>PandasIndex</div><input type='checkbox' disabled/><label></label><input id='index-95379b64-28a0-4a33-a5b1-5930ba9ebb93' class='xr-index-data-in' type='checkbox'/><label for='index-95379b64-28a0-4a33-a5b1-5930ba9ebb93' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([&#x27;centroid&#x27;], dtype=&#x27;object&#x27;, name=&#x27;keypoints&#x27;))</pre></div></li><li class='xr-var-item'><div class='xr-index-name'><div>individuals</div></div><div class='xr-index-preview'>PandasIndex</div><input type='checkbox' disabled/><label></label><input id='index-15107dce-adc3-48c5-b4a1-a532ecb19f66' class='xr-index-data-in' type='checkbox'/><label for='index-15107dce-adc3-48c5-b4a1-a532ecb19f66' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([&#x27;AEON3B_NTP&#x27;, &#x27;AEON3B_TP1&#x27;, &#x27;AEON3B_TP2&#x27;], dtype=&#x27;object&#x27;, name=&#x27;individuals&#x27;))</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-7d6afa00-f2f9-4edb-a603-fbfbbf0ecef9' class='xr-section-summary-in' type='checkbox' disabled ><label for='section-7d6afa00-f2f9-4edb-a603-fbfbbf0ecef9' class='xr-section-summary'  title='Expand/collapse section'>Attributes: <span>(0)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><dl class='xr-attrs'></dl></div></li></ul></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 185-187

We could get the first and last time that an individual was inside the
slippery region now, by examining this DataArray

.. GENERATED FROM PYTHON SOURCE LINES 187-198

.. code-block:: Python

    i_id = "AEON3B_NTP"
    individual_0_centroid = was_in_slippery_region.sel(
        individuals=i_id, keypoints="centroid"
    )
    first_entry = individual_0_centroid["time"][individual_0_centroid].values[0]
    last_exit = individual_0_centroid["time"][individual_0_centroid].values[-1]
    print(
        f"{i_id} first entered the slippery region at "
        f"{first_entry} and last exited at {last_exit}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    AEON3B_NTP first entered the slippery region at 2.1 and last exited at 8.64




.. GENERATED FROM PYTHON SOURCE LINES 199-212

Data Generalisation Issues
--------------------------
The shape of the resulting ``DataArray`` is the same as our original
``DataArray``, but without the ``"space"`` dimension.
Indeed, we have essentially collapsed the ``"space"`` dimension, since our
``in_slippery_region`` function takes in a 1D data slice (the x, y positions
of a single individual's centroid at a given point in time) and returns a
scalar value (True/False).
However, the fact that we have to construct a new ``DataArray`` after running
our function over all space slices in our ``DataArray`` is not scalable - our
``for`` loop approach relied on knowing how many dimensions our data had (and
the size of those dimensions). We don't have a guarantee that the next
``DataArray`` that comes in will have the same structure.

.. GENERATED FROM PYTHON SOURCE LINES 214-223

Making our Function Broadcastable
---------------------------------
To combat this problem, we can make the observation that given any
``DataArray``, we always want to broadcast our ``in_slippery_region``
function
along the ``"space"`` dimension. By "broadcast", we mean that we always want
to run our function for each 1D-slice in the ``"space"`` dimension, since
these are the (x, y) coordinates. As such, we can decorate our function with
the ``make_broadcastable`` decorator:

.. GENERATED FROM PYTHON SOURCE LINES 223-230

.. code-block:: Python



    @make_broadcastable()
    def in_slippery_region_broadcastable(xy_position) -> float:
        return in_slippery_region(xy_position=xy_position)









.. GENERATED FROM PYTHON SOURCE LINES 231-235

Note that when writing your own methods, there is no need to have both
``in_slippery_region`` and ``in_slippery_region_broadcastable``, simply apply
the ``make_broadcastable`` decorator to ``in_slippery_region`` directly.
We've made two separate functions here to illustrate what's going on.

.. GENERATED FROM PYTHON SOURCE LINES 237-239

``in_slippery_region_broadcastable`` is usable in exactly the same ways as
``in_slippery_region`` was:

.. GENERATED FROM PYTHON SOURCE LINES 239-247

.. code-block:: Python


    for point in [(0, 100), (450, 700), (550, 1500), (601, 500)]:
        print(
            f"{point} is in slippery region: "
            f"{in_slippery_region_broadcastable(point)}"
        )






.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    (0, 100) is in slippery region: False
    (450, 700) is in slippery region: True
    (550, 1500) is in slippery region: True
    (601, 500) is in slippery region: False




.. GENERATED FROM PYTHON SOURCE LINES 248-253

However, ``in_slippery_region_broadcastable`` also takes a ``DataArray`` as
the first (``xy_position``) argument, and an extra keyword argument
``broadcast_dimension``. These arguments let us broadcast across the given
dimension of the input ``DataArray``, treating each 1D-slice as a separate
input to ``in_slippery_region``.

.. GENERATED FROM PYTHON SOURCE LINES 253-262

.. code-block:: Python


    in_slippery_region_broadcasting = in_slippery_region_broadcastable(
        positions,  # Now a DataArray input
        broadcast_dimension="space",
    )

    print("DataArray output using broadcasting: ")
    in_slippery_region_broadcasting





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    DataArray output using broadcasting: 


.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div><svg style="position: absolute; width: 0; height: 0; overflow: hidden">
    <defs>
    <symbol id="icon-database" viewBox="0 0 32 32">
    <path d="M16 0c-8.837 0-16 2.239-16 5v4c0 2.761 7.163 5 16 5s16-2.239 16-5v-4c0-2.761-7.163-5-16-5z"></path>
    <path d="M16 17c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z"></path>
    <path d="M16 26c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z"></path>
    </symbol>
    <symbol id="icon-file-text2" viewBox="0 0 32 32">
    <path d="M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z"></path>
    <path d="M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
    <path d="M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
    <path d="M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
    </symbol>
    </defs>
    </svg>
    <style>/* CSS stylesheet for displaying xarray objects in jupyterlab.
     *
     */

    :root {
      --xr-font-color0: var(--jp-content-font-color0, rgba(0, 0, 0, 1));
      --xr-font-color2: var(--jp-content-font-color2, rgba(0, 0, 0, 0.54));
      --xr-font-color3: var(--jp-content-font-color3, rgba(0, 0, 0, 0.38));
      --xr-border-color: var(--jp-border-color2, #e0e0e0);
      --xr-disabled-color: var(--jp-layout-color3, #bdbdbd);
      --xr-background-color: var(--jp-layout-color0, white);
      --xr-background-color-row-even: var(--jp-layout-color1, white);
      --xr-background-color-row-odd: var(--jp-layout-color2, #eeeeee);
    }

    html[theme="dark"],
    html[data-theme="dark"],
    body[data-theme="dark"],
    body.vscode-dark {
      --xr-font-color0: rgba(255, 255, 255, 1);
      --xr-font-color2: rgba(255, 255, 255, 0.54);
      --xr-font-color3: rgba(255, 255, 255, 0.38);
      --xr-border-color: #1f1f1f;
      --xr-disabled-color: #515151;
      --xr-background-color: #111111;
      --xr-background-color-row-even: #111111;
      --xr-background-color-row-odd: #313131;
    }

    .xr-wrap {
      display: block !important;
      min-width: 300px;
      max-width: 700px;
    }

    .xr-text-repr-fallback {
      /* fallback to plain text repr when CSS is not injected (untrusted notebook) */
      display: none;
    }

    .xr-header {
      padding-top: 6px;
      padding-bottom: 6px;
      margin-bottom: 4px;
      border-bottom: solid 1px var(--xr-border-color);
    }

    .xr-header > div,
    .xr-header > ul {
      display: inline;
      margin-top: 0;
      margin-bottom: 0;
    }

    .xr-obj-type,
    .xr-array-name {
      margin-left: 2px;
      margin-right: 10px;
    }

    .xr-obj-type {
      color: var(--xr-font-color2);
    }

    .xr-sections {
      padding-left: 0 !important;
      display: grid;
      grid-template-columns: 150px auto auto 1fr 0 20px 0 20px;
    }

    .xr-section-item {
      display: contents;
    }

    .xr-section-item input {
      display: inline-block;
      opacity: 0;
      height: 0;
    }

    .xr-section-item input + label {
      color: var(--xr-disabled-color);
    }

    .xr-section-item input:enabled + label {
      cursor: pointer;
      color: var(--xr-font-color2);
    }

    .xr-section-item input:focus + label {
      border: 2px solid var(--xr-font-color0);
    }

    .xr-section-item input:enabled + label:hover {
      color: var(--xr-font-color0);
    }

    .xr-section-summary {
      grid-column: 1;
      color: var(--xr-font-color2);
      font-weight: 500;
    }

    .xr-section-summary > span {
      display: inline-block;
      padding-left: 0.5em;
    }

    .xr-section-summary-in:disabled + label {
      color: var(--xr-font-color2);
    }

    .xr-section-summary-in + label:before {
      display: inline-block;
      content: "►";
      font-size: 11px;
      width: 15px;
      text-align: center;
    }

    .xr-section-summary-in:disabled + label:before {
      color: var(--xr-disabled-color);
    }

    .xr-section-summary-in:checked + label:before {
      content: "▼";
    }

    .xr-section-summary-in:checked + label > span {
      display: none;
    }

    .xr-section-summary,
    .xr-section-inline-details {
      padding-top: 4px;
      padding-bottom: 4px;
    }

    .xr-section-inline-details {
      grid-column: 2 / -1;
    }

    .xr-section-details {
      display: none;
      grid-column: 1 / -1;
      margin-bottom: 5px;
    }

    .xr-section-summary-in:checked ~ .xr-section-details {
      display: contents;
    }

    .xr-array-wrap {
      grid-column: 1 / -1;
      display: grid;
      grid-template-columns: 20px auto;
    }

    .xr-array-wrap > label {
      grid-column: 1;
      vertical-align: top;
    }

    .xr-preview {
      color: var(--xr-font-color3);
    }

    .xr-array-preview,
    .xr-array-data {
      padding: 0 5px !important;
      grid-column: 2;
    }

    .xr-array-data,
    .xr-array-in:checked ~ .xr-array-preview {
      display: none;
    }

    .xr-array-in:checked ~ .xr-array-data,
    .xr-array-preview {
      display: inline-block;
    }

    .xr-dim-list {
      display: inline-block !important;
      list-style: none;
      padding: 0 !important;
      margin: 0;
    }

    .xr-dim-list li {
      display: inline-block;
      padding: 0;
      margin: 0;
    }

    .xr-dim-list:before {
      content: "(";
    }

    .xr-dim-list:after {
      content: ")";
    }

    .xr-dim-list li:not(:last-child):after {
      content: ",";
      padding-right: 5px;
    }

    .xr-has-index {
      font-weight: bold;
    }

    .xr-var-list,
    .xr-var-item {
      display: contents;
    }

    .xr-var-item > div,
    .xr-var-item label,
    .xr-var-item > .xr-var-name span {
      background-color: var(--xr-background-color-row-even);
      margin-bottom: 0;
    }

    .xr-var-item > .xr-var-name:hover span {
      padding-right: 5px;
    }

    .xr-var-list > li:nth-child(odd) > div,
    .xr-var-list > li:nth-child(odd) > label,
    .xr-var-list > li:nth-child(odd) > .xr-var-name span {
      background-color: var(--xr-background-color-row-odd);
    }

    .xr-var-name {
      grid-column: 1;
    }

    .xr-var-dims {
      grid-column: 2;
    }

    .xr-var-dtype {
      grid-column: 3;
      text-align: right;
      color: var(--xr-font-color2);
    }

    .xr-var-preview {
      grid-column: 4;
    }

    .xr-index-preview {
      grid-column: 2 / 5;
      color: var(--xr-font-color2);
    }

    .xr-var-name,
    .xr-var-dims,
    .xr-var-dtype,
    .xr-preview,
    .xr-attrs dt {
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
      padding-right: 10px;
    }

    .xr-var-name:hover,
    .xr-var-dims:hover,
    .xr-var-dtype:hover,
    .xr-attrs dt:hover {
      overflow: visible;
      width: auto;
      z-index: 1;
    }

    .xr-var-attrs,
    .xr-var-data,
    .xr-index-data {
      display: none;
      background-color: var(--xr-background-color) !important;
      padding-bottom: 5px !important;
    }

    .xr-var-attrs-in:checked ~ .xr-var-attrs,
    .xr-var-data-in:checked ~ .xr-var-data,
    .xr-index-data-in:checked ~ .xr-index-data {
      display: block;
    }

    .xr-var-data > table {
      float: right;
    }

    .xr-var-name span,
    .xr-var-data,
    .xr-index-name div,
    .xr-index-data,
    .xr-attrs {
      padding-left: 25px !important;
    }

    .xr-attrs,
    .xr-var-attrs,
    .xr-var-data,
    .xr-index-data {
      grid-column: 1 / -1;
    }

    dl.xr-attrs {
      padding: 0;
      margin: 0;
      display: grid;
      grid-template-columns: 125px auto;
    }

    .xr-attrs dt,
    .xr-attrs dd {
      padding: 0;
      margin: 0;
      float: left;
      padding-right: 10px;
      width: auto;
    }

    .xr-attrs dt {
      font-weight: normal;
      grid-column: 1;
    }

    .xr-attrs dt:hover span {
      display: inline-block;
      background: var(--xr-background-color);
      padding-right: 10px;
    }

    .xr-attrs dd {
      grid-column: 2;
      white-space: pre-wrap;
      word-break: break-all;
    }

    .xr-icon-database,
    .xr-icon-file-text2,
    .xr-no-icon {
      display: inline-block;
      vertical-align: middle;
      width: 1em;
      height: 1.5em !important;
      stroke-width: 0;
      stroke: currentColor;
      fill: currentColor;
    }
    </style><pre class='xr-text-repr-fallback'>&lt;xarray.DataArray &#x27;position&#x27; (time: 601, keypoints: 1, individuals: 3)&gt; Size: 2kB
    False False False False False False ... False False False False False False
    Coordinates:
      * time         (time) float64 5kB 0.0 0.02 0.04 0.06 ... 11.96 11.98 12.0
      * keypoints    (keypoints) &lt;U8 32B &#x27;centroid&#x27;
      * individuals  (individuals) &lt;U10 120B &#x27;AEON3B_NTP&#x27; &#x27;AEON3B_TP1&#x27; &#x27;AEON3B_TP2&#x27;</pre><div class='xr-wrap' style='display:none'><div class='xr-header'><div class='xr-obj-type'>xarray.DataArray</div><div class='xr-array-name'>'position'</div><ul class='xr-dim-list'><li><span class='xr-has-index'>time</span>: 601</li><li><span class='xr-has-index'>keypoints</span>: 1</li><li><span class='xr-has-index'>individuals</span>: 3</li></ul></div><ul class='xr-sections'><li class='xr-section-item'><div class='xr-array-wrap'><input id='section-f4c17561-ee65-4f18-972d-f63a1bde4596' class='xr-array-in' type='checkbox' ><label for='section-f4c17561-ee65-4f18-972d-f63a1bde4596' title='Show/hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-array-preview xr-preview'><span>False False False False False False ... False False False False False</span></div><div class='xr-array-data'><pre>array([[[False, False, False]],

           [[False, False, False]],

           [[False, False, False]],

           ...,

           [[False, False, False]],

           [[False, False, False]],

           [[False, False, False]]], shape=(601, 1, 3))</pre></div></div></li><li class='xr-section-item'><input id='section-aa0d0280-4fe3-4210-b521-582df5900084' class='xr-section-summary-in' type='checkbox'  checked><label for='section-aa0d0280-4fe3-4210-b521-582df5900084' class='xr-section-summary' >Coordinates: <span>(3)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>time</span></div><div class='xr-var-dims'>(time)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>0.0 0.02 0.04 ... 11.96 11.98 12.0</div><input id='attrs-6c54f160-00bf-4271-ae6a-224e76b89db1' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-6c54f160-00bf-4271-ae6a-224e76b89db1' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-88e02f8c-d62b-47d1-a442-bc36173e0b19' class='xr-var-data-in' type='checkbox'><label for='data-88e02f8c-d62b-47d1-a442-bc36173e0b19' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([ 0.  ,  0.02,  0.04, ..., 11.96, 11.98, 12.  ], shape=(601,))</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>keypoints</span></div><div class='xr-var-dims'>(keypoints)</div><div class='xr-var-dtype'>&lt;U8</div><div class='xr-var-preview xr-preview'>&#x27;centroid&#x27;</div><input id='attrs-8a3adeb7-ffca-4c37-8d82-f882f7518500' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-8a3adeb7-ffca-4c37-8d82-f882f7518500' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-c2cb7b50-ad8f-4a9d-a277-60ca2676b556' class='xr-var-data-in' type='checkbox'><label for='data-c2cb7b50-ad8f-4a9d-a277-60ca2676b556' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([&#x27;centroid&#x27;], dtype=&#x27;&lt;U8&#x27;)</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>individuals</span></div><div class='xr-var-dims'>(individuals)</div><div class='xr-var-dtype'>&lt;U10</div><div class='xr-var-preview xr-preview'>&#x27;AEON3B_NTP&#x27; ... &#x27;AEON3B_TP2&#x27;</div><input id='attrs-fe0ccb6c-29f9-46b7-b13d-851767f993d7' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-fe0ccb6c-29f9-46b7-b13d-851767f993d7' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-af7f747a-5e95-424c-9ae1-bd4e073b190c' class='xr-var-data-in' type='checkbox'><label for='data-af7f747a-5e95-424c-9ae1-bd4e073b190c' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([&#x27;AEON3B_NTP&#x27;, &#x27;AEON3B_TP1&#x27;, &#x27;AEON3B_TP2&#x27;], dtype=&#x27;&lt;U10&#x27;)</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-dda08ee9-460e-493a-85f9-a25c31c5c7fe' class='xr-section-summary-in' type='checkbox'  ><label for='section-dda08ee9-460e-493a-85f9-a25c31c5c7fe' class='xr-section-summary' >Indexes: <span>(3)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-index-name'><div>time</div></div><div class='xr-index-preview'>PandasIndex</div><input type='checkbox' disabled/><label></label><input id='index-8c6022c1-3d13-4711-8e79-b6adcc839c43' class='xr-index-data-in' type='checkbox'/><label for='index-8c6022c1-3d13-4711-8e79-b6adcc839c43' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([  0.0,  0.02,  0.04,  0.06,  0.08,   0.1,  0.12,  0.14,  0.16,  0.18,
           ...
           11.82, 11.84, 11.86, 11.88,  11.9, 11.92, 11.94, 11.96, 11.98,  12.0],
          dtype=&#x27;float64&#x27;, name=&#x27;time&#x27;, length=601))</pre></div></li><li class='xr-var-item'><div class='xr-index-name'><div>keypoints</div></div><div class='xr-index-preview'>PandasIndex</div><input type='checkbox' disabled/><label></label><input id='index-976395cf-24e2-470a-a324-e32357e1845f' class='xr-index-data-in' type='checkbox'/><label for='index-976395cf-24e2-470a-a324-e32357e1845f' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([&#x27;centroid&#x27;], dtype=&#x27;object&#x27;, name=&#x27;keypoints&#x27;))</pre></div></li><li class='xr-var-item'><div class='xr-index-name'><div>individuals</div></div><div class='xr-index-preview'>PandasIndex</div><input type='checkbox' disabled/><label></label><input id='index-ff2ed8f1-d1a9-4a30-b242-e8dbefbadfd0' class='xr-index-data-in' type='checkbox'/><label for='index-ff2ed8f1-d1a9-4a30-b242-e8dbefbadfd0' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([&#x27;AEON3B_NTP&#x27;, &#x27;AEON3B_TP1&#x27;, &#x27;AEON3B_TP2&#x27;], dtype=&#x27;object&#x27;, name=&#x27;individuals&#x27;))</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-a4ce2c25-f0b3-4a34-838a-0d55012c2659' class='xr-section-summary-in' type='checkbox' disabled ><label for='section-a4ce2c25-f0b3-4a34-838a-0d55012c2659' class='xr-section-summary'  title='Expand/collapse section'>Attributes: <span>(0)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><dl class='xr-attrs'></dl></div></li></ul></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 263-268

Calling ``in_slippery_region_broadcastable`` in this way gives us a
``DataArray`` output - and one that retains any information that was in our
original ``DataArray`` to boot! The result is exactly the same as what we got
from using our ``for`` loop, and then adding the extra information to the
result.

.. GENERATED FROM PYTHON SOURCE LINES 268-274

.. code-block:: Python


    # Throws an AssertionError if the two inputs are not the same
    xr.testing.assert_equal(
        was_in_slippery_region, in_slippery_region_broadcasting
    )








.. GENERATED FROM PYTHON SOURCE LINES 275-278

But importantly, ``in_slippery_region_broadcastable`` also works on
``DataArrays`` with different dimensions.
For example, we could have pre-selected one of our individuals beforehand.

.. GENERATED FROM PYTHON SOURCE LINES 278-292

.. code-block:: Python

    i_id = "AEON3B_NTP"
    individual_0 = positions.sel(individuals=i_id)

    individual_0_in_slippery_region = in_slippery_region_broadcastable(
        individual_0,
        broadcast_dimension="space",
    )

    print(
        "We get a 3D DataArray output from our 4D input, "
        "again with the 'space' dimension that we broadcast along collapsed:"
    )
    individual_0_in_slippery_region





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    We get a 3D DataArray output from our 4D input, again with the 'space' dimension that we broadcast along collapsed:


.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div><svg style="position: absolute; width: 0; height: 0; overflow: hidden">
    <defs>
    <symbol id="icon-database" viewBox="0 0 32 32">
    <path d="M16 0c-8.837 0-16 2.239-16 5v4c0 2.761 7.163 5 16 5s16-2.239 16-5v-4c0-2.761-7.163-5-16-5z"></path>
    <path d="M16 17c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z"></path>
    <path d="M16 26c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z"></path>
    </symbol>
    <symbol id="icon-file-text2" viewBox="0 0 32 32">
    <path d="M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z"></path>
    <path d="M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
    <path d="M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
    <path d="M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
    </symbol>
    </defs>
    </svg>
    <style>/* CSS stylesheet for displaying xarray objects in jupyterlab.
     *
     */

    :root {
      --xr-font-color0: var(--jp-content-font-color0, rgba(0, 0, 0, 1));
      --xr-font-color2: var(--jp-content-font-color2, rgba(0, 0, 0, 0.54));
      --xr-font-color3: var(--jp-content-font-color3, rgba(0, 0, 0, 0.38));
      --xr-border-color: var(--jp-border-color2, #e0e0e0);
      --xr-disabled-color: var(--jp-layout-color3, #bdbdbd);
      --xr-background-color: var(--jp-layout-color0, white);
      --xr-background-color-row-even: var(--jp-layout-color1, white);
      --xr-background-color-row-odd: var(--jp-layout-color2, #eeeeee);
    }

    html[theme="dark"],
    html[data-theme="dark"],
    body[data-theme="dark"],
    body.vscode-dark {
      --xr-font-color0: rgba(255, 255, 255, 1);
      --xr-font-color2: rgba(255, 255, 255, 0.54);
      --xr-font-color3: rgba(255, 255, 255, 0.38);
      --xr-border-color: #1f1f1f;
      --xr-disabled-color: #515151;
      --xr-background-color: #111111;
      --xr-background-color-row-even: #111111;
      --xr-background-color-row-odd: #313131;
    }

    .xr-wrap {
      display: block !important;
      min-width: 300px;
      max-width: 700px;
    }

    .xr-text-repr-fallback {
      /* fallback to plain text repr when CSS is not injected (untrusted notebook) */
      display: none;
    }

    .xr-header {
      padding-top: 6px;
      padding-bottom: 6px;
      margin-bottom: 4px;
      border-bottom: solid 1px var(--xr-border-color);
    }

    .xr-header > div,
    .xr-header > ul {
      display: inline;
      margin-top: 0;
      margin-bottom: 0;
    }

    .xr-obj-type,
    .xr-array-name {
      margin-left: 2px;
      margin-right: 10px;
    }

    .xr-obj-type {
      color: var(--xr-font-color2);
    }

    .xr-sections {
      padding-left: 0 !important;
      display: grid;
      grid-template-columns: 150px auto auto 1fr 0 20px 0 20px;
    }

    .xr-section-item {
      display: contents;
    }

    .xr-section-item input {
      display: inline-block;
      opacity: 0;
      height: 0;
    }

    .xr-section-item input + label {
      color: var(--xr-disabled-color);
    }

    .xr-section-item input:enabled + label {
      cursor: pointer;
      color: var(--xr-font-color2);
    }

    .xr-section-item input:focus + label {
      border: 2px solid var(--xr-font-color0);
    }

    .xr-section-item input:enabled + label:hover {
      color: var(--xr-font-color0);
    }

    .xr-section-summary {
      grid-column: 1;
      color: var(--xr-font-color2);
      font-weight: 500;
    }

    .xr-section-summary > span {
      display: inline-block;
      padding-left: 0.5em;
    }

    .xr-section-summary-in:disabled + label {
      color: var(--xr-font-color2);
    }

    .xr-section-summary-in + label:before {
      display: inline-block;
      content: "►";
      font-size: 11px;
      width: 15px;
      text-align: center;
    }

    .xr-section-summary-in:disabled + label:before {
      color: var(--xr-disabled-color);
    }

    .xr-section-summary-in:checked + label:before {
      content: "▼";
    }

    .xr-section-summary-in:checked + label > span {
      display: none;
    }

    .xr-section-summary,
    .xr-section-inline-details {
      padding-top: 4px;
      padding-bottom: 4px;
    }

    .xr-section-inline-details {
      grid-column: 2 / -1;
    }

    .xr-section-details {
      display: none;
      grid-column: 1 / -1;
      margin-bottom: 5px;
    }

    .xr-section-summary-in:checked ~ .xr-section-details {
      display: contents;
    }

    .xr-array-wrap {
      grid-column: 1 / -1;
      display: grid;
      grid-template-columns: 20px auto;
    }

    .xr-array-wrap > label {
      grid-column: 1;
      vertical-align: top;
    }

    .xr-preview {
      color: var(--xr-font-color3);
    }

    .xr-array-preview,
    .xr-array-data {
      padding: 0 5px !important;
      grid-column: 2;
    }

    .xr-array-data,
    .xr-array-in:checked ~ .xr-array-preview {
      display: none;
    }

    .xr-array-in:checked ~ .xr-array-data,
    .xr-array-preview {
      display: inline-block;
    }

    .xr-dim-list {
      display: inline-block !important;
      list-style: none;
      padding: 0 !important;
      margin: 0;
    }

    .xr-dim-list li {
      display: inline-block;
      padding: 0;
      margin: 0;
    }

    .xr-dim-list:before {
      content: "(";
    }

    .xr-dim-list:after {
      content: ")";
    }

    .xr-dim-list li:not(:last-child):after {
      content: ",";
      padding-right: 5px;
    }

    .xr-has-index {
      font-weight: bold;
    }

    .xr-var-list,
    .xr-var-item {
      display: contents;
    }

    .xr-var-item > div,
    .xr-var-item label,
    .xr-var-item > .xr-var-name span {
      background-color: var(--xr-background-color-row-even);
      margin-bottom: 0;
    }

    .xr-var-item > .xr-var-name:hover span {
      padding-right: 5px;
    }

    .xr-var-list > li:nth-child(odd) > div,
    .xr-var-list > li:nth-child(odd) > label,
    .xr-var-list > li:nth-child(odd) > .xr-var-name span {
      background-color: var(--xr-background-color-row-odd);
    }

    .xr-var-name {
      grid-column: 1;
    }

    .xr-var-dims {
      grid-column: 2;
    }

    .xr-var-dtype {
      grid-column: 3;
      text-align: right;
      color: var(--xr-font-color2);
    }

    .xr-var-preview {
      grid-column: 4;
    }

    .xr-index-preview {
      grid-column: 2 / 5;
      color: var(--xr-font-color2);
    }

    .xr-var-name,
    .xr-var-dims,
    .xr-var-dtype,
    .xr-preview,
    .xr-attrs dt {
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
      padding-right: 10px;
    }

    .xr-var-name:hover,
    .xr-var-dims:hover,
    .xr-var-dtype:hover,
    .xr-attrs dt:hover {
      overflow: visible;
      width: auto;
      z-index: 1;
    }

    .xr-var-attrs,
    .xr-var-data,
    .xr-index-data {
      display: none;
      background-color: var(--xr-background-color) !important;
      padding-bottom: 5px !important;
    }

    .xr-var-attrs-in:checked ~ .xr-var-attrs,
    .xr-var-data-in:checked ~ .xr-var-data,
    .xr-index-data-in:checked ~ .xr-index-data {
      display: block;
    }

    .xr-var-data > table {
      float: right;
    }

    .xr-var-name span,
    .xr-var-data,
    .xr-index-name div,
    .xr-index-data,
    .xr-attrs {
      padding-left: 25px !important;
    }

    .xr-attrs,
    .xr-var-attrs,
    .xr-var-data,
    .xr-index-data {
      grid-column: 1 / -1;
    }

    dl.xr-attrs {
      padding: 0;
      margin: 0;
      display: grid;
      grid-template-columns: 125px auto;
    }

    .xr-attrs dt,
    .xr-attrs dd {
      padding: 0;
      margin: 0;
      float: left;
      padding-right: 10px;
      width: auto;
    }

    .xr-attrs dt {
      font-weight: normal;
      grid-column: 1;
    }

    .xr-attrs dt:hover span {
      display: inline-block;
      background: var(--xr-background-color);
      padding-right: 10px;
    }

    .xr-attrs dd {
      grid-column: 2;
      white-space: pre-wrap;
      word-break: break-all;
    }

    .xr-icon-database,
    .xr-icon-file-text2,
    .xr-no-icon {
      display: inline-block;
      vertical-align: middle;
      width: 1em;
      height: 1.5em !important;
      stroke-width: 0;
      stroke: currentColor;
      fill: currentColor;
    }
    </style><pre class='xr-text-repr-fallback'>&lt;xarray.DataArray &#x27;position&#x27; (time: 601, keypoints: 1)&gt; Size: 601B
    False False False False False False ... False False False False False False
    Coordinates:
      * time         (time) float64 5kB 0.0 0.02 0.04 0.06 ... 11.96 11.98 12.0
      * keypoints    (keypoints) &lt;U8 32B &#x27;centroid&#x27;
        individuals  &lt;U10 40B &#x27;AEON3B_NTP&#x27;</pre><div class='xr-wrap' style='display:none'><div class='xr-header'><div class='xr-obj-type'>xarray.DataArray</div><div class='xr-array-name'>'position'</div><ul class='xr-dim-list'><li><span class='xr-has-index'>time</span>: 601</li><li><span class='xr-has-index'>keypoints</span>: 1</li></ul></div><ul class='xr-sections'><li class='xr-section-item'><div class='xr-array-wrap'><input id='section-4a6a02b1-db5a-4575-9e4e-8ca1b1699c38' class='xr-array-in' type='checkbox' ><label for='section-4a6a02b1-db5a-4575-9e4e-8ca1b1699c38' title='Show/hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-array-preview xr-preview'><span>False False False False False False ... False False False False False</span></div><div class='xr-array-data'><pre>array([[False],
           [False],
           [False],
           [False],
           [False],
           [False],
           [False],
           [False],
           [False],
           [False],
           [False],
           [False],
           [False],
           [False],
           [False],
           [False],
           [False],
           [False],
           [False],
           [False],
    ...
           [False],
           [False],
           [False],
           [False],
           [False],
           [False],
           [False],
           [False],
           [False],
           [False],
           [False],
           [False],
           [False],
           [False],
           [False],
           [False],
           [False],
           [False],
           [False],
           [False]])</pre></div></div></li><li class='xr-section-item'><input id='section-d1d7e4e2-008d-4fca-acf2-db3b4f093125' class='xr-section-summary-in' type='checkbox'  checked><label for='section-d1d7e4e2-008d-4fca-acf2-db3b4f093125' class='xr-section-summary' >Coordinates: <span>(3)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>time</span></div><div class='xr-var-dims'>(time)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>0.0 0.02 0.04 ... 11.96 11.98 12.0</div><input id='attrs-30fc6a91-2d64-47f3-9b89-6abec97fa98b' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-30fc6a91-2d64-47f3-9b89-6abec97fa98b' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-7de4a36e-2fd1-4e6f-b198-91dabe380052' class='xr-var-data-in' type='checkbox'><label for='data-7de4a36e-2fd1-4e6f-b198-91dabe380052' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([ 0.  ,  0.02,  0.04, ..., 11.96, 11.98, 12.  ], shape=(601,))</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>keypoints</span></div><div class='xr-var-dims'>(keypoints)</div><div class='xr-var-dtype'>&lt;U8</div><div class='xr-var-preview xr-preview'>&#x27;centroid&#x27;</div><input id='attrs-fea7b9b6-8ad6-4284-aae6-c25b8bd6d6f2' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-fea7b9b6-8ad6-4284-aae6-c25b8bd6d6f2' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-221cc4de-e850-44d3-a24d-9b24a1d01f4f' class='xr-var-data-in' type='checkbox'><label for='data-221cc4de-e850-44d3-a24d-9b24a1d01f4f' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([&#x27;centroid&#x27;], dtype=&#x27;&lt;U8&#x27;)</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>individuals</span></div><div class='xr-var-dims'>()</div><div class='xr-var-dtype'>&lt;U10</div><div class='xr-var-preview xr-preview'>&#x27;AEON3B_NTP&#x27;</div><input id='attrs-c35122ac-1bc0-41a8-b03f-b72106576120' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-c35122ac-1bc0-41a8-b03f-b72106576120' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-66658e0d-a370-48d5-b4bc-00622ae04f40' class='xr-var-data-in' type='checkbox'><label for='data-66658e0d-a370-48d5-b4bc-00622ae04f40' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array(&#x27;AEON3B_NTP&#x27;, dtype=&#x27;&lt;U10&#x27;)</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-481794a3-a778-4c78-a167-f8a26f0ff3db' class='xr-section-summary-in' type='checkbox'  ><label for='section-481794a3-a778-4c78-a167-f8a26f0ff3db' class='xr-section-summary' >Indexes: <span>(2)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-index-name'><div>time</div></div><div class='xr-index-preview'>PandasIndex</div><input type='checkbox' disabled/><label></label><input id='index-87e10a52-f464-48eb-8a3e-cdcec9b9c062' class='xr-index-data-in' type='checkbox'/><label for='index-87e10a52-f464-48eb-8a3e-cdcec9b9c062' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([  0.0,  0.02,  0.04,  0.06,  0.08,   0.1,  0.12,  0.14,  0.16,  0.18,
           ...
           11.82, 11.84, 11.86, 11.88,  11.9, 11.92, 11.94, 11.96, 11.98,  12.0],
          dtype=&#x27;float64&#x27;, name=&#x27;time&#x27;, length=601))</pre></div></li><li class='xr-var-item'><div class='xr-index-name'><div>keypoints</div></div><div class='xr-index-preview'>PandasIndex</div><input type='checkbox' disabled/><label></label><input id='index-c6914e9b-205f-4387-99ad-22cbda640082' class='xr-index-data-in' type='checkbox'/><label for='index-c6914e9b-205f-4387-99ad-22cbda640082' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([&#x27;centroid&#x27;], dtype=&#x27;object&#x27;, name=&#x27;keypoints&#x27;))</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-074f7fea-07f1-4023-ac8c-854dcd0afc51' class='xr-section-summary-in' type='checkbox' disabled ><label for='section-074f7fea-07f1-4023-ac8c-854dcd0afc51' class='xr-section-summary'  title='Expand/collapse section'>Attributes: <span>(0)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><dl class='xr-attrs'></dl></div></li></ul></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 293-305

Additional Function Arguments
-----------------------------
So far our ``in_slippery_region`` method only takes a single argument,
the ``xy_position`` itself. However in follow-up experiments, we might move
the slippery region in the enclosure, and so adapt our existing function to
make it more general.
It will now allow someone to input a custom rectangular region, by specifying
the minimum and maximum ``(x, y)`` coordinates of the rectangle, rather than
relying on fixed values inside the function.
The default region will be the rectangle from our first experiment, and we
still want to be able to broadcast this function.
And so we write a more general function, as below.

.. GENERATED FROM PYTHON SOURCE LINES 305-328

.. code-block:: Python



    @make_broadcastable()
    def in_slippery_region_general(
        xy_position, xy_min=(400.0, 0.0), xy_max=(600.0, 2000.0)
    ) -> bool:
        """Return True if xy_position is in the slippery region.

        Return False otherwise.
        xy_position has 2 elements, the (x, y) coordinates respectively.
        """
        x_min, y_min = xy_min
        x_max, y_max = xy_max
        is_within_bounds_x = x_min <= xy_position[0] <= x_max
        is_within_bounds_y = y_min <= xy_position[1] <= y_max
        return is_within_bounds_x and is_within_bounds_y


    # (0.5, 0.5) is in the unit square whose bottom left corner is at the origin
    print(in_slippery_region_general((0.5, 0.5), (0.0, 0.0), (1.0, 1.0)))
    # But (0.5,0.5) is not in a unit square whose bottom left corner is at (1,1)
    print(in_slippery_region_general((0.5, 0.5), (1.0, 1.0), (2.0, 2.0)))





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    True
    False




.. GENERATED FROM PYTHON SOURCE LINES 329-332

We will find that ``make_broadcastable`` retains the additional arguments to
the function we define, however the ``xy_position`` argument has to be the
first argument to the function, that appears in the ``def`` statement.

.. GENERATED FROM PYTHON SOURCE LINES 332-341

.. code-block:: Python


    # Default arguments should give us the same results as before
    xr.testing.assert_equal(
        was_in_slippery_region, in_slippery_region_general(positions)
    )
    # But we can also provide the optional arguments in the same way as with the
    # un-decorated function.
    in_slippery_region_general(positions, xy_min=(100, 0), xy_max=(400, 1000))






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div><svg style="position: absolute; width: 0; height: 0; overflow: hidden">
    <defs>
    <symbol id="icon-database" viewBox="0 0 32 32">
    <path d="M16 0c-8.837 0-16 2.239-16 5v4c0 2.761 7.163 5 16 5s16-2.239 16-5v-4c0-2.761-7.163-5-16-5z"></path>
    <path d="M16 17c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z"></path>
    <path d="M16 26c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z"></path>
    </symbol>
    <symbol id="icon-file-text2" viewBox="0 0 32 32">
    <path d="M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z"></path>
    <path d="M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
    <path d="M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
    <path d="M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
    </symbol>
    </defs>
    </svg>
    <style>/* CSS stylesheet for displaying xarray objects in jupyterlab.
     *
     */

    :root {
      --xr-font-color0: var(--jp-content-font-color0, rgba(0, 0, 0, 1));
      --xr-font-color2: var(--jp-content-font-color2, rgba(0, 0, 0, 0.54));
      --xr-font-color3: var(--jp-content-font-color3, rgba(0, 0, 0, 0.38));
      --xr-border-color: var(--jp-border-color2, #e0e0e0);
      --xr-disabled-color: var(--jp-layout-color3, #bdbdbd);
      --xr-background-color: var(--jp-layout-color0, white);
      --xr-background-color-row-even: var(--jp-layout-color1, white);
      --xr-background-color-row-odd: var(--jp-layout-color2, #eeeeee);
    }

    html[theme="dark"],
    html[data-theme="dark"],
    body[data-theme="dark"],
    body.vscode-dark {
      --xr-font-color0: rgba(255, 255, 255, 1);
      --xr-font-color2: rgba(255, 255, 255, 0.54);
      --xr-font-color3: rgba(255, 255, 255, 0.38);
      --xr-border-color: #1f1f1f;
      --xr-disabled-color: #515151;
      --xr-background-color: #111111;
      --xr-background-color-row-even: #111111;
      --xr-background-color-row-odd: #313131;
    }

    .xr-wrap {
      display: block !important;
      min-width: 300px;
      max-width: 700px;
    }

    .xr-text-repr-fallback {
      /* fallback to plain text repr when CSS is not injected (untrusted notebook) */
      display: none;
    }

    .xr-header {
      padding-top: 6px;
      padding-bottom: 6px;
      margin-bottom: 4px;
      border-bottom: solid 1px var(--xr-border-color);
    }

    .xr-header > div,
    .xr-header > ul {
      display: inline;
      margin-top: 0;
      margin-bottom: 0;
    }

    .xr-obj-type,
    .xr-array-name {
      margin-left: 2px;
      margin-right: 10px;
    }

    .xr-obj-type {
      color: var(--xr-font-color2);
    }

    .xr-sections {
      padding-left: 0 !important;
      display: grid;
      grid-template-columns: 150px auto auto 1fr 0 20px 0 20px;
    }

    .xr-section-item {
      display: contents;
    }

    .xr-section-item input {
      display: inline-block;
      opacity: 0;
      height: 0;
    }

    .xr-section-item input + label {
      color: var(--xr-disabled-color);
    }

    .xr-section-item input:enabled + label {
      cursor: pointer;
      color: var(--xr-font-color2);
    }

    .xr-section-item input:focus + label {
      border: 2px solid var(--xr-font-color0);
    }

    .xr-section-item input:enabled + label:hover {
      color: var(--xr-font-color0);
    }

    .xr-section-summary {
      grid-column: 1;
      color: var(--xr-font-color2);
      font-weight: 500;
    }

    .xr-section-summary > span {
      display: inline-block;
      padding-left: 0.5em;
    }

    .xr-section-summary-in:disabled + label {
      color: var(--xr-font-color2);
    }

    .xr-section-summary-in + label:before {
      display: inline-block;
      content: "►";
      font-size: 11px;
      width: 15px;
      text-align: center;
    }

    .xr-section-summary-in:disabled + label:before {
      color: var(--xr-disabled-color);
    }

    .xr-section-summary-in:checked + label:before {
      content: "▼";
    }

    .xr-section-summary-in:checked + label > span {
      display: none;
    }

    .xr-section-summary,
    .xr-section-inline-details {
      padding-top: 4px;
      padding-bottom: 4px;
    }

    .xr-section-inline-details {
      grid-column: 2 / -1;
    }

    .xr-section-details {
      display: none;
      grid-column: 1 / -1;
      margin-bottom: 5px;
    }

    .xr-section-summary-in:checked ~ .xr-section-details {
      display: contents;
    }

    .xr-array-wrap {
      grid-column: 1 / -1;
      display: grid;
      grid-template-columns: 20px auto;
    }

    .xr-array-wrap > label {
      grid-column: 1;
      vertical-align: top;
    }

    .xr-preview {
      color: var(--xr-font-color3);
    }

    .xr-array-preview,
    .xr-array-data {
      padding: 0 5px !important;
      grid-column: 2;
    }

    .xr-array-data,
    .xr-array-in:checked ~ .xr-array-preview {
      display: none;
    }

    .xr-array-in:checked ~ .xr-array-data,
    .xr-array-preview {
      display: inline-block;
    }

    .xr-dim-list {
      display: inline-block !important;
      list-style: none;
      padding: 0 !important;
      margin: 0;
    }

    .xr-dim-list li {
      display: inline-block;
      padding: 0;
      margin: 0;
    }

    .xr-dim-list:before {
      content: "(";
    }

    .xr-dim-list:after {
      content: ")";
    }

    .xr-dim-list li:not(:last-child):after {
      content: ",";
      padding-right: 5px;
    }

    .xr-has-index {
      font-weight: bold;
    }

    .xr-var-list,
    .xr-var-item {
      display: contents;
    }

    .xr-var-item > div,
    .xr-var-item label,
    .xr-var-item > .xr-var-name span {
      background-color: var(--xr-background-color-row-even);
      margin-bottom: 0;
    }

    .xr-var-item > .xr-var-name:hover span {
      padding-right: 5px;
    }

    .xr-var-list > li:nth-child(odd) > div,
    .xr-var-list > li:nth-child(odd) > label,
    .xr-var-list > li:nth-child(odd) > .xr-var-name span {
      background-color: var(--xr-background-color-row-odd);
    }

    .xr-var-name {
      grid-column: 1;
    }

    .xr-var-dims {
      grid-column: 2;
    }

    .xr-var-dtype {
      grid-column: 3;
      text-align: right;
      color: var(--xr-font-color2);
    }

    .xr-var-preview {
      grid-column: 4;
    }

    .xr-index-preview {
      grid-column: 2 / 5;
      color: var(--xr-font-color2);
    }

    .xr-var-name,
    .xr-var-dims,
    .xr-var-dtype,
    .xr-preview,
    .xr-attrs dt {
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
      padding-right: 10px;
    }

    .xr-var-name:hover,
    .xr-var-dims:hover,
    .xr-var-dtype:hover,
    .xr-attrs dt:hover {
      overflow: visible;
      width: auto;
      z-index: 1;
    }

    .xr-var-attrs,
    .xr-var-data,
    .xr-index-data {
      display: none;
      background-color: var(--xr-background-color) !important;
      padding-bottom: 5px !important;
    }

    .xr-var-attrs-in:checked ~ .xr-var-attrs,
    .xr-var-data-in:checked ~ .xr-var-data,
    .xr-index-data-in:checked ~ .xr-index-data {
      display: block;
    }

    .xr-var-data > table {
      float: right;
    }

    .xr-var-name span,
    .xr-var-data,
    .xr-index-name div,
    .xr-index-data,
    .xr-attrs {
      padding-left: 25px !important;
    }

    .xr-attrs,
    .xr-var-attrs,
    .xr-var-data,
    .xr-index-data {
      grid-column: 1 / -1;
    }

    dl.xr-attrs {
      padding: 0;
      margin: 0;
      display: grid;
      grid-template-columns: 125px auto;
    }

    .xr-attrs dt,
    .xr-attrs dd {
      padding: 0;
      margin: 0;
      float: left;
      padding-right: 10px;
      width: auto;
    }

    .xr-attrs dt {
      font-weight: normal;
      grid-column: 1;
    }

    .xr-attrs dt:hover span {
      display: inline-block;
      background: var(--xr-background-color);
      padding-right: 10px;
    }

    .xr-attrs dd {
      grid-column: 2;
      white-space: pre-wrap;
      word-break: break-all;
    }

    .xr-icon-database,
    .xr-icon-file-text2,
    .xr-no-icon {
      display: inline-block;
      vertical-align: middle;
      width: 1em;
      height: 1.5em !important;
      stroke-width: 0;
      stroke: currentColor;
      fill: currentColor;
    }
    </style><pre class='xr-text-repr-fallback'>&lt;xarray.DataArray &#x27;position&#x27; (time: 601, keypoints: 1, individuals: 3)&gt; Size: 2kB
    False False True False False True False ... True True False True True False
    Coordinates:
      * time         (time) float64 5kB 0.0 0.02 0.04 0.06 ... 11.96 11.98 12.0
      * keypoints    (keypoints) &lt;U8 32B &#x27;centroid&#x27;
      * individuals  (individuals) &lt;U10 120B &#x27;AEON3B_NTP&#x27; &#x27;AEON3B_TP1&#x27; &#x27;AEON3B_TP2&#x27;</pre><div class='xr-wrap' style='display:none'><div class='xr-header'><div class='xr-obj-type'>xarray.DataArray</div><div class='xr-array-name'>'position'</div><ul class='xr-dim-list'><li><span class='xr-has-index'>time</span>: 601</li><li><span class='xr-has-index'>keypoints</span>: 1</li><li><span class='xr-has-index'>individuals</span>: 3</li></ul></div><ul class='xr-sections'><li class='xr-section-item'><div class='xr-array-wrap'><input id='section-4417e135-871f-4c71-8e26-1fdefdb947b3' class='xr-array-in' type='checkbox' ><label for='section-4417e135-871f-4c71-8e26-1fdefdb947b3' title='Show/hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-array-preview xr-preview'><span>False False True False False True ... True True False True True False</span></div><div class='xr-array-data'><pre>array([[[False, False,  True]],

           [[False, False,  True]],

           [[False, False,  True]],

           ...,

           [[ True,  True, False]],

           [[ True,  True, False]],

           [[ True,  True, False]]], shape=(601, 1, 3))</pre></div></div></li><li class='xr-section-item'><input id='section-4d8d5356-79fd-484b-b825-e20bf03e5b29' class='xr-section-summary-in' type='checkbox'  checked><label for='section-4d8d5356-79fd-484b-b825-e20bf03e5b29' class='xr-section-summary' >Coordinates: <span>(3)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>time</span></div><div class='xr-var-dims'>(time)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>0.0 0.02 0.04 ... 11.96 11.98 12.0</div><input id='attrs-8ca97187-86f0-4643-8f14-6afe28881e0d' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-8ca97187-86f0-4643-8f14-6afe28881e0d' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-f31926c7-9059-47b5-8573-f75bff325306' class='xr-var-data-in' type='checkbox'><label for='data-f31926c7-9059-47b5-8573-f75bff325306' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([ 0.  ,  0.02,  0.04, ..., 11.96, 11.98, 12.  ], shape=(601,))</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>keypoints</span></div><div class='xr-var-dims'>(keypoints)</div><div class='xr-var-dtype'>&lt;U8</div><div class='xr-var-preview xr-preview'>&#x27;centroid&#x27;</div><input id='attrs-095e99e5-dd23-4de9-91b2-0b4e4bdad4cb' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-095e99e5-dd23-4de9-91b2-0b4e4bdad4cb' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-73c9c536-1f9f-4853-b7f2-a403419ffc60' class='xr-var-data-in' type='checkbox'><label for='data-73c9c536-1f9f-4853-b7f2-a403419ffc60' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([&#x27;centroid&#x27;], dtype=&#x27;&lt;U8&#x27;)</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>individuals</span></div><div class='xr-var-dims'>(individuals)</div><div class='xr-var-dtype'>&lt;U10</div><div class='xr-var-preview xr-preview'>&#x27;AEON3B_NTP&#x27; ... &#x27;AEON3B_TP2&#x27;</div><input id='attrs-62b81426-b46f-4d87-910b-570192e27234' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-62b81426-b46f-4d87-910b-570192e27234' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-40c40c96-57ab-4aff-ba6e-dba6ba8e23ea' class='xr-var-data-in' type='checkbox'><label for='data-40c40c96-57ab-4aff-ba6e-dba6ba8e23ea' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([&#x27;AEON3B_NTP&#x27;, &#x27;AEON3B_TP1&#x27;, &#x27;AEON3B_TP2&#x27;], dtype=&#x27;&lt;U10&#x27;)</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-21d33287-07b2-46b2-8dd2-d05fa557fc27' class='xr-section-summary-in' type='checkbox'  ><label for='section-21d33287-07b2-46b2-8dd2-d05fa557fc27' class='xr-section-summary' >Indexes: <span>(3)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-index-name'><div>time</div></div><div class='xr-index-preview'>PandasIndex</div><input type='checkbox' disabled/><label></label><input id='index-c729dba8-26b2-41b7-be14-9ce137bdb526' class='xr-index-data-in' type='checkbox'/><label for='index-c729dba8-26b2-41b7-be14-9ce137bdb526' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([  0.0,  0.02,  0.04,  0.06,  0.08,   0.1,  0.12,  0.14,  0.16,  0.18,
           ...
           11.82, 11.84, 11.86, 11.88,  11.9, 11.92, 11.94, 11.96, 11.98,  12.0],
          dtype=&#x27;float64&#x27;, name=&#x27;time&#x27;, length=601))</pre></div></li><li class='xr-var-item'><div class='xr-index-name'><div>keypoints</div></div><div class='xr-index-preview'>PandasIndex</div><input type='checkbox' disabled/><label></label><input id='index-deb7dc9d-be7c-47b4-8495-5f49b4be7841' class='xr-index-data-in' type='checkbox'/><label for='index-deb7dc9d-be7c-47b4-8495-5f49b4be7841' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([&#x27;centroid&#x27;], dtype=&#x27;object&#x27;, name=&#x27;keypoints&#x27;))</pre></div></li><li class='xr-var-item'><div class='xr-index-name'><div>individuals</div></div><div class='xr-index-preview'>PandasIndex</div><input type='checkbox' disabled/><label></label><input id='index-794f1383-8564-4b76-86c4-b7addd7ca566' class='xr-index-data-in' type='checkbox'/><label for='index-794f1383-8564-4b76-86c4-b7addd7ca566' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([&#x27;AEON3B_NTP&#x27;, &#x27;AEON3B_TP1&#x27;, &#x27;AEON3B_TP2&#x27;], dtype=&#x27;object&#x27;, name=&#x27;individuals&#x27;))</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-7c038eb9-3ded-4092-ba6a-1027b8dd0ac4' class='xr-section-summary-in' type='checkbox' disabled ><label for='section-7c038eb9-3ded-4092-ba6a-1027b8dd0ac4' class='xr-section-summary'  title='Expand/collapse section'>Attributes: <span>(0)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><dl class='xr-attrs'></dl></div></li></ul></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 342-348

Only Broadcast Along Select Dimensions
--------------------------------------
The ``make_broadcastable`` decorator has some flexibility with its input
arguments, to help you avoid unintentional behaviour. You may have noticed,
for example, that there is nothing stopping someone who wants to use your
analysis code from trying to broadcast along the wrong dimension.

.. GENERATED FROM PYTHON SOURCE LINES 348-356

.. code-block:: Python


    silly_broadcast = in_slippery_region_broadcastable(
        positions, broadcast_dimension="time"
    )

    print("The output has collapsed the time dimension:")
    silly_broadcast





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    The output has collapsed the time dimension:


.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div><svg style="position: absolute; width: 0; height: 0; overflow: hidden">
    <defs>
    <symbol id="icon-database" viewBox="0 0 32 32">
    <path d="M16 0c-8.837 0-16 2.239-16 5v4c0 2.761 7.163 5 16 5s16-2.239 16-5v-4c0-2.761-7.163-5-16-5z"></path>
    <path d="M16 17c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z"></path>
    <path d="M16 26c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z"></path>
    </symbol>
    <symbol id="icon-file-text2" viewBox="0 0 32 32">
    <path d="M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z"></path>
    <path d="M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
    <path d="M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
    <path d="M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
    </symbol>
    </defs>
    </svg>
    <style>/* CSS stylesheet for displaying xarray objects in jupyterlab.
     *
     */

    :root {
      --xr-font-color0: var(--jp-content-font-color0, rgba(0, 0, 0, 1));
      --xr-font-color2: var(--jp-content-font-color2, rgba(0, 0, 0, 0.54));
      --xr-font-color3: var(--jp-content-font-color3, rgba(0, 0, 0, 0.38));
      --xr-border-color: var(--jp-border-color2, #e0e0e0);
      --xr-disabled-color: var(--jp-layout-color3, #bdbdbd);
      --xr-background-color: var(--jp-layout-color0, white);
      --xr-background-color-row-even: var(--jp-layout-color1, white);
      --xr-background-color-row-odd: var(--jp-layout-color2, #eeeeee);
    }

    html[theme="dark"],
    html[data-theme="dark"],
    body[data-theme="dark"],
    body.vscode-dark {
      --xr-font-color0: rgba(255, 255, 255, 1);
      --xr-font-color2: rgba(255, 255, 255, 0.54);
      --xr-font-color3: rgba(255, 255, 255, 0.38);
      --xr-border-color: #1f1f1f;
      --xr-disabled-color: #515151;
      --xr-background-color: #111111;
      --xr-background-color-row-even: #111111;
      --xr-background-color-row-odd: #313131;
    }

    .xr-wrap {
      display: block !important;
      min-width: 300px;
      max-width: 700px;
    }

    .xr-text-repr-fallback {
      /* fallback to plain text repr when CSS is not injected (untrusted notebook) */
      display: none;
    }

    .xr-header {
      padding-top: 6px;
      padding-bottom: 6px;
      margin-bottom: 4px;
      border-bottom: solid 1px var(--xr-border-color);
    }

    .xr-header > div,
    .xr-header > ul {
      display: inline;
      margin-top: 0;
      margin-bottom: 0;
    }

    .xr-obj-type,
    .xr-array-name {
      margin-left: 2px;
      margin-right: 10px;
    }

    .xr-obj-type {
      color: var(--xr-font-color2);
    }

    .xr-sections {
      padding-left: 0 !important;
      display: grid;
      grid-template-columns: 150px auto auto 1fr 0 20px 0 20px;
    }

    .xr-section-item {
      display: contents;
    }

    .xr-section-item input {
      display: inline-block;
      opacity: 0;
      height: 0;
    }

    .xr-section-item input + label {
      color: var(--xr-disabled-color);
    }

    .xr-section-item input:enabled + label {
      cursor: pointer;
      color: var(--xr-font-color2);
    }

    .xr-section-item input:focus + label {
      border: 2px solid var(--xr-font-color0);
    }

    .xr-section-item input:enabled + label:hover {
      color: var(--xr-font-color0);
    }

    .xr-section-summary {
      grid-column: 1;
      color: var(--xr-font-color2);
      font-weight: 500;
    }

    .xr-section-summary > span {
      display: inline-block;
      padding-left: 0.5em;
    }

    .xr-section-summary-in:disabled + label {
      color: var(--xr-font-color2);
    }

    .xr-section-summary-in + label:before {
      display: inline-block;
      content: "►";
      font-size: 11px;
      width: 15px;
      text-align: center;
    }

    .xr-section-summary-in:disabled + label:before {
      color: var(--xr-disabled-color);
    }

    .xr-section-summary-in:checked + label:before {
      content: "▼";
    }

    .xr-section-summary-in:checked + label > span {
      display: none;
    }

    .xr-section-summary,
    .xr-section-inline-details {
      padding-top: 4px;
      padding-bottom: 4px;
    }

    .xr-section-inline-details {
      grid-column: 2 / -1;
    }

    .xr-section-details {
      display: none;
      grid-column: 1 / -1;
      margin-bottom: 5px;
    }

    .xr-section-summary-in:checked ~ .xr-section-details {
      display: contents;
    }

    .xr-array-wrap {
      grid-column: 1 / -1;
      display: grid;
      grid-template-columns: 20px auto;
    }

    .xr-array-wrap > label {
      grid-column: 1;
      vertical-align: top;
    }

    .xr-preview {
      color: var(--xr-font-color3);
    }

    .xr-array-preview,
    .xr-array-data {
      padding: 0 5px !important;
      grid-column: 2;
    }

    .xr-array-data,
    .xr-array-in:checked ~ .xr-array-preview {
      display: none;
    }

    .xr-array-in:checked ~ .xr-array-data,
    .xr-array-preview {
      display: inline-block;
    }

    .xr-dim-list {
      display: inline-block !important;
      list-style: none;
      padding: 0 !important;
      margin: 0;
    }

    .xr-dim-list li {
      display: inline-block;
      padding: 0;
      margin: 0;
    }

    .xr-dim-list:before {
      content: "(";
    }

    .xr-dim-list:after {
      content: ")";
    }

    .xr-dim-list li:not(:last-child):after {
      content: ",";
      padding-right: 5px;
    }

    .xr-has-index {
      font-weight: bold;
    }

    .xr-var-list,
    .xr-var-item {
      display: contents;
    }

    .xr-var-item > div,
    .xr-var-item label,
    .xr-var-item > .xr-var-name span {
      background-color: var(--xr-background-color-row-even);
      margin-bottom: 0;
    }

    .xr-var-item > .xr-var-name:hover span {
      padding-right: 5px;
    }

    .xr-var-list > li:nth-child(odd) > div,
    .xr-var-list > li:nth-child(odd) > label,
    .xr-var-list > li:nth-child(odd) > .xr-var-name span {
      background-color: var(--xr-background-color-row-odd);
    }

    .xr-var-name {
      grid-column: 1;
    }

    .xr-var-dims {
      grid-column: 2;
    }

    .xr-var-dtype {
      grid-column: 3;
      text-align: right;
      color: var(--xr-font-color2);
    }

    .xr-var-preview {
      grid-column: 4;
    }

    .xr-index-preview {
      grid-column: 2 / 5;
      color: var(--xr-font-color2);
    }

    .xr-var-name,
    .xr-var-dims,
    .xr-var-dtype,
    .xr-preview,
    .xr-attrs dt {
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
      padding-right: 10px;
    }

    .xr-var-name:hover,
    .xr-var-dims:hover,
    .xr-var-dtype:hover,
    .xr-attrs dt:hover {
      overflow: visible;
      width: auto;
      z-index: 1;
    }

    .xr-var-attrs,
    .xr-var-data,
    .xr-index-data {
      display: none;
      background-color: var(--xr-background-color) !important;
      padding-bottom: 5px !important;
    }

    .xr-var-attrs-in:checked ~ .xr-var-attrs,
    .xr-var-data-in:checked ~ .xr-var-data,
    .xr-index-data-in:checked ~ .xr-index-data {
      display: block;
    }

    .xr-var-data > table {
      float: right;
    }

    .xr-var-name span,
    .xr-var-data,
    .xr-index-name div,
    .xr-index-data,
    .xr-attrs {
      padding-left: 25px !important;
    }

    .xr-attrs,
    .xr-var-attrs,
    .xr-var-data,
    .xr-index-data {
      grid-column: 1 / -1;
    }

    dl.xr-attrs {
      padding: 0;
      margin: 0;
      display: grid;
      grid-template-columns: 125px auto;
    }

    .xr-attrs dt,
    .xr-attrs dd {
      padding: 0;
      margin: 0;
      float: left;
      padding-right: 10px;
      width: auto;
    }

    .xr-attrs dt {
      font-weight: normal;
      grid-column: 1;
    }

    .xr-attrs dt:hover span {
      display: inline-block;
      background: var(--xr-background-color);
      padding-right: 10px;
    }

    .xr-attrs dd {
      grid-column: 2;
      white-space: pre-wrap;
      word-break: break-all;
    }

    .xr-icon-database,
    .xr-icon-file-text2,
    .xr-no-icon {
      display: inline-block;
      vertical-align: middle;
      width: 1em;
      height: 1.5em !important;
      stroke-width: 0;
      stroke: currentColor;
      fill: currentColor;
    }
    </style><pre class='xr-text-repr-fallback'>&lt;xarray.DataArray &#x27;position&#x27; (space: 2, keypoints: 1, individuals: 3)&gt; Size: 6B
    False False False False False False
    Coordinates:
      * space        (space) &lt;U1 8B &#x27;x&#x27; &#x27;y&#x27;
      * keypoints    (keypoints) &lt;U8 32B &#x27;centroid&#x27;
      * individuals  (individuals) &lt;U10 120B &#x27;AEON3B_NTP&#x27; &#x27;AEON3B_TP1&#x27; &#x27;AEON3B_TP2&#x27;</pre><div class='xr-wrap' style='display:none'><div class='xr-header'><div class='xr-obj-type'>xarray.DataArray</div><div class='xr-array-name'>'position'</div><ul class='xr-dim-list'><li><span class='xr-has-index'>space</span>: 2</li><li><span class='xr-has-index'>keypoints</span>: 1</li><li><span class='xr-has-index'>individuals</span>: 3</li></ul></div><ul class='xr-sections'><li class='xr-section-item'><div class='xr-array-wrap'><input id='section-68ed8b37-2764-4255-b2f9-f2c71c73b2e6' class='xr-array-in' type='checkbox' ><label for='section-68ed8b37-2764-4255-b2f9-f2c71c73b2e6' title='Show/hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-array-preview xr-preview'><span>False False False False False False</span></div><div class='xr-array-data'><pre>array([[[False, False, False]],

           [[False, False, False]]])</pre></div></div></li><li class='xr-section-item'><input id='section-2ba8453e-bd3e-490e-b49b-314466065c88' class='xr-section-summary-in' type='checkbox'  checked><label for='section-2ba8453e-bd3e-490e-b49b-314466065c88' class='xr-section-summary' >Coordinates: <span>(3)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>space</span></div><div class='xr-var-dims'>(space)</div><div class='xr-var-dtype'>&lt;U1</div><div class='xr-var-preview xr-preview'>&#x27;x&#x27; &#x27;y&#x27;</div><input id='attrs-d7fac54f-06c4-451a-9405-c2ec8972fa8a' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-d7fac54f-06c4-451a-9405-c2ec8972fa8a' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-3f9152f7-9569-4384-b5d1-bfd553213a8e' class='xr-var-data-in' type='checkbox'><label for='data-3f9152f7-9569-4384-b5d1-bfd553213a8e' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([&#x27;x&#x27;, &#x27;y&#x27;], dtype=&#x27;&lt;U1&#x27;)</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>keypoints</span></div><div class='xr-var-dims'>(keypoints)</div><div class='xr-var-dtype'>&lt;U8</div><div class='xr-var-preview xr-preview'>&#x27;centroid&#x27;</div><input id='attrs-9a445505-0892-4e3e-95ea-e3ee49754ffd' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-9a445505-0892-4e3e-95ea-e3ee49754ffd' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-6d32db74-010f-430e-a78d-2da40629c07e' class='xr-var-data-in' type='checkbox'><label for='data-6d32db74-010f-430e-a78d-2da40629c07e' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([&#x27;centroid&#x27;], dtype=&#x27;&lt;U8&#x27;)</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>individuals</span></div><div class='xr-var-dims'>(individuals)</div><div class='xr-var-dtype'>&lt;U10</div><div class='xr-var-preview xr-preview'>&#x27;AEON3B_NTP&#x27; ... &#x27;AEON3B_TP2&#x27;</div><input id='attrs-ba4994b5-b30e-4544-b9cd-51504050a8d0' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-ba4994b5-b30e-4544-b9cd-51504050a8d0' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-81520021-15a6-4fc2-85eb-5b49bb9d5c76' class='xr-var-data-in' type='checkbox'><label for='data-81520021-15a6-4fc2-85eb-5b49bb9d5c76' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([&#x27;AEON3B_NTP&#x27;, &#x27;AEON3B_TP1&#x27;, &#x27;AEON3B_TP2&#x27;], dtype=&#x27;&lt;U10&#x27;)</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-e2f8850e-6d75-4170-9c52-71827a35dfe3' class='xr-section-summary-in' type='checkbox'  ><label for='section-e2f8850e-6d75-4170-9c52-71827a35dfe3' class='xr-section-summary' >Indexes: <span>(3)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-index-name'><div>space</div></div><div class='xr-index-preview'>PandasIndex</div><input type='checkbox' disabled/><label></label><input id='index-c6eb544c-a357-45f5-a117-e2cd37a3991b' class='xr-index-data-in' type='checkbox'/><label for='index-c6eb544c-a357-45f5-a117-e2cd37a3991b' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([&#x27;x&#x27;, &#x27;y&#x27;], dtype=&#x27;object&#x27;, name=&#x27;space&#x27;))</pre></div></li><li class='xr-var-item'><div class='xr-index-name'><div>keypoints</div></div><div class='xr-index-preview'>PandasIndex</div><input type='checkbox' disabled/><label></label><input id='index-20dd5bd2-3cf8-47a7-9c89-047e49956e31' class='xr-index-data-in' type='checkbox'/><label for='index-20dd5bd2-3cf8-47a7-9c89-047e49956e31' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([&#x27;centroid&#x27;], dtype=&#x27;object&#x27;, name=&#x27;keypoints&#x27;))</pre></div></li><li class='xr-var-item'><div class='xr-index-name'><div>individuals</div></div><div class='xr-index-preview'>PandasIndex</div><input type='checkbox' disabled/><label></label><input id='index-8a578dc4-8098-42de-ac1d-002cc64e83c5' class='xr-index-data-in' type='checkbox'/><label for='index-8a578dc4-8098-42de-ac1d-002cc64e83c5' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([&#x27;AEON3B_NTP&#x27;, &#x27;AEON3B_TP1&#x27;, &#x27;AEON3B_TP2&#x27;], dtype=&#x27;object&#x27;, name=&#x27;individuals&#x27;))</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-d5055269-5100-4c3b-ade2-817d3265cc6d' class='xr-section-summary-in' type='checkbox' disabled ><label for='section-d5055269-5100-4c3b-ade2-817d3265cc6d' class='xr-section-summary'  title='Expand/collapse section'>Attributes: <span>(0)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><dl class='xr-attrs'></dl></div></li></ul></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 357-367

There is no error thrown because functionally, this is a valid operation.
The time slices of our data were 1D, so we can run ``in_slippery_region`` on
them. But each slice isn't a position, it's an array of one spatial
coordinate (EG x) for each keypoint, each individual, at every time! So from
an analysis standpoint, doing this doesn't make sense and isn't how we intend
our function to be used.

We can pass the ``only_broadcastable_along`` keyword argument to
``make_broadcastable`` to prevent these kinds of mistakes, and make our
intentions clearer.

.. GENERATED FROM PYTHON SOURCE LINES 367-374

.. code-block:: Python



    @make_broadcastable(only_broadcastable_along="space")
    def in_slippery_region_space_only(xy_position):
        return in_slippery_region(xy_position)









.. GENERATED FROM PYTHON SOURCE LINES 375-377

Now, ``in_slippery_region_space_only`` no longer takes the
``broadcast_dimension`` argument.

.. GENERATED FROM PYTHON SOURCE LINES 377-386

.. code-block:: Python


    try:
        in_slippery_region_space_only(
            positions,
            broadcast_dimension="time",
        )
    except TypeError as e:
        print(f"Got a TypeError when trying to run, here's the message:\n{e}")





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Got a TypeError when trying to run, here's the message:
    __main__.in_slippery_region_space_only() got multiple values for keyword argument 'broadcast_dimension'




.. GENERATED FROM PYTHON SOURCE LINES 387-394

The error we get seems to be telling us that we've tried to set the value of
``broadcast_dimension`` twice. Specifying
``only_broadcastable_along = "space"`` forces ``broadcast_dimension`` to be
set to ``"space"``, so trying to set it again (even to to the same value)
results in an error.
However, ``in_slippery_region_space_only`` knows to only use the ``"space"``
dimension of the input by default.

.. GENERATED FROM PYTHON SOURCE LINES 394-401

.. code-block:: Python


    was_in_view_space_only = in_slippery_region_space_only(positions)

    xr.testing.assert_equal(
        in_slippery_region_broadcasting, was_in_view_space_only
    )








.. GENERATED FROM PYTHON SOURCE LINES 402-406

It is worth noting that there is a "helper" decorator,
``space_broadcastable``, that essentially does the same thing as
``make_broadcastable(only_broadcastable_along="space")``.
You can use this decorator for your own convenience.

.. GENERATED FROM PYTHON SOURCE LINES 408-412

Extending to Class Methods
--------------------------
``make_broadcastable`` can also be applied to class methods, though it needs
to be told that you are doing so via the ``is_classmethod`` parameter.

.. GENERATED FROM PYTHON SOURCE LINES 412-442

.. code-block:: Python



    class Rectangle:
        """Represents an observing camera in the experiment."""

        xy_min: tuple[float, float]
        xy_max: tuple[float, float]

        def __init__(self, xy_min=(0.0, 0.0), xy_max=(1.0, 1.0)):
            """Create a new instance."""
            self.xy_min = tuple(xy_min)
            self.xy_max = tuple(xy_max)

        @make_broadcastable(is_classmethod=True, only_broadcastable_along="space")
        def is_inside(self, /, xy_position) -> bool:
            """Whether the position is inside the rectangle."""
            # For the sake of brevity, we won't redefine the entire method here,
            # and will just call our existing function.
            return in_slippery_region_general(
                xy_position, self.xy_min, self.xy_max
            )


    slippery_region = Rectangle(xy_min=(400.0, 0.0), xy_max=(600.0, 2000.0))
    was_in_region_clsmethod = slippery_region.is_inside(positions)

    xr.testing.assert_equal(
        was_in_region_clsmethod, in_slippery_region_broadcasting
    )








.. GENERATED FROM PYTHON SOURCE LINES 443-446

The ``broadcastable_method`` decorator is provided as a helpful alias for
``make_broadcastable(is_classmethod=True)``, and otherwise works in the same
way (and accepts the same parameters).

.. GENERATED FROM PYTHON SOURCE LINES 446-480

.. code-block:: Python



    class RectangleAlternative:
        """Represents an observing camera in the experiment."""

        xy_min: tuple[float, float]
        xy_max: tuple[float, float]

        def __init__(self, xy_min=(0.0, 0.0), xy_max=(1.0, 1.0)):
            """Create a new instance."""
            self.xy_min = tuple(xy_min)
            self.xy_max = tuple(xy_max)

        @make_broadcastable(is_classmethod=True, only_broadcastable_along="space")
        def is_inside(self, /, xy_position) -> bool:
            """Whether the position is inside the rectangle."""
            # For the sake of brevity, we won't redefine the entire method here,
            # and will just call our existing function.
            return in_slippery_region_general(
                xy_position, self.xy_min, self.xy_max
            )


    slippery_region_alt = RectangleAlternative(
        xy_min=(400.0, 0.0), xy_max=(600.0, 2000.0)
    )
    was_in_region_clsmethod_alt = slippery_region.is_inside(positions)

    xr.testing.assert_equal(
        was_in_region_clsmethod_alt, in_slippery_region_broadcasting
    )

    xr.testing.assert_equal(was_in_region_clsmethod_alt, was_in_region_clsmethod)








.. GENERATED FROM PYTHON SOURCE LINES 481-484

In fact, if you look at the Regions of Interest submodule, and in particular
the classes inside it, you'll notice that we use the ``broadcastable_method``
decorator ourselves in some of these methods!


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 1.127 seconds)


.. _sphx_glr_download_examples_advanced_broadcasting_your_own_methods.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/neuroinformatics-unit/movement/gh-pages?filepath=notebooks/examples/advanced/broadcasting_your_own_methods.ipynb
        :alt: Launch binder
        :width: 150 px

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: broadcasting_your_own_methods.ipynb <broadcasting_your_own_methods.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: broadcasting_your_own_methods.py <broadcasting_your_own_methods.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: broadcasting_your_own_methods.zip <broadcasting_your_own_methods.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
